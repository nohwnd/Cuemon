name: Cuemon CI/CD Pipeline
on:
  pull_request:
    branches: [main]
    paths-ignore:
      - .codecov/**
      - .docfx/**
      - .github/**
      - .nuget/**
      - '**.md'
  workflow_dispatch:
    inputs:
      configuration:
        type: choice
        description: The build configuration to use in the deploy stage.
        required: true
        default: Release
        options:
          - Debug
          - Release

jobs:
  prepare_linux:
    name: 🐧 Prepare Linux
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    outputs:
      restoreCacheKey: ${{ steps.dotnet-restore.outputs.restoreCacheKey }}
    steps:
      - name: Checkout
        uses: codebeltnet/git-checkout@v1

      - name: Install .NET
        uses: codebeltnet/install-dotnet@v1
        with:
          includePreview: true

      - id: dotnet-restore
        name: Restore Dependencies
        uses: codebeltnet/dotnet-restore@v2
        with:
          useRestoreCache: true

  prepare_windows:
    name: 🪟 Prepare Windows
    runs-on: windows-2022
    timeout-minutes: 15
    outputs:
      restoreCacheKey: ${{ steps.dotnet-restore.outputs.restoreCacheKey }}
    steps:
      - name: Checkout
        uses: codebeltnet/git-checkout@v1

      - name: Install .NET
        uses: codebeltnet/install-dotnet@v1
        with:
          includePreview: true

      - id: dotnet-restore
        name: Restore Dependencies
        uses: codebeltnet/dotnet-restore@v2
        with:
          useRestoreCache: true

  build:
    name: 🛠️ Build
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      matrix:
        configuration: [Debug, Release]
        framework: [net9.0, net8.0, net6.0, netstandard2.1, netstandard2.0]
    needs: [prepare_linux]
    outputs:
      version: ${{ steps.minver-calculate.outputs.version }}
      testProjects: ${{ steps.test-projects.outputs.result }}
    steps:
      - name: Checkout
        uses: codebeltnet/git-checkout@v1
      
      - name: Install .NET
        uses: codebeltnet/install-dotnet@v1
        with:
          includePreview: true

      - name: Install MinVer
        uses: codebeltnet/dotnet-tool-install-minver@v1

      - id: minver-calculate
        name: Calculate Version
        uses: codebeltnet/minver-calculate@v2

      - name: Set environment variable for projects
        run: |
          if [ "${{ matrix.framework }}" == "netstandard2.1" ]; then
            echo "PROJECTS=src/**/Cuemon.Extensions.IO.csproj src/**/Cuemon.IO.csproj" >> $GITHUB_ENV
          elif [ "${{ matrix.framework }}" == "netstandard2.0" ]; then
            projects=(
              "src/**/Cuemon.Core.csproj"
              "src/**/Cuemon.Data.csproj"
              "src/**/Cuemon.Data.Integrity.csproj"
              "src/**/Cuemon.Data.SqlClient.csproj"
              "src/**/Cuemon.Diagnostics.csproj"
              "src/**/Cuemon.Extensions.Collections.Generic.csproj"
              "src/**/Cuemon.Extensions.Collections.Specialized.csproj"
              "src/**/Cuemon.Extensions.Core.csproj"
              "src/**/Cuemon.Extensions.Data.csproj"
              "src/**/Cuemon.Extensions.Data.Integrity.csproj"
              "src/**/Cuemon.Extensions.DependencyInjection.csproj"
              "src/**/Cuemon.Extensions.Diagnostics.csproj"
              "src/**/Cuemon.Extensions.Globalization.csproj"
              "src/**/Cuemon.Extensions.Hosting.csproj"
              "src/**/Cuemon.Extensions.IO.csproj"
              "src/**/Cuemon.Extensions.Net.csproj"
              "src/**/Cuemon.Extensions.Newtonsoft.Json.csproj"
              "src/**/Cuemon.Extensions.Reflection.csproj"
              "src/**/Cuemon.Extensions.Runtime.Caching.csproj"
              "src/**/Cuemon.Extensions.Text.csproj"
              "src/**/Cuemon.Extensions.Threading.csproj"
              "src/**/Cuemon.Extensions.Xml.csproj"
              "src/**/Cuemon.Extensions.Xunit.csproj"
              "src/**/Cuemon.Extensions.Xunit.Hosting.csproj"
              "src/**/Cuemon.Extensions.YamlDotNet.csproj"
              "src/**/Cuemon.IO.csproj"
              "src/**/Cuemon.Net.csproj"
              "src/**/Cuemon.Resilience.csproj"
              "src/**/Cuemon.Runtime.Caching.csproj"
              "src/**/Cuemon.Security.Cryptography.csproj"
              "src/**/Cuemon.Threading.csproj"
              "src/**/Cuemon.Xml.csproj"
            )
            echo "PROJECTS=$(IFS=' '; echo "${projects[*]}")" >> $GITHUB_ENV
          else
            echo "PROJECTS=src/**/*.csproj" >> $GITHUB_ENV
          fi
        shell: bash

      - id: dotnet-build
        name: Build for ${{ matrix.framework }} (${{ matrix.configuration }})
        uses: codebeltnet/dotnet-build@v2
        with:
          projects: ${{ env.PROJECTS }}
          configuration: ${{ matrix.configuration }}
          framework: ${{ matrix.framework }}
          restoreCacheKey: ${{ needs.prepare_linux.outputs.restoreCacheKey }}

  test:
    name: 🧪 Test
    needs: [build, prepare_linux, prepare_windows]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022]
        configuration: [Debug, Release]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: codebeltnet/git-checkout@v1

      - name: Install .NET
        uses: codebeltnet/install-dotnet@v1
        with:
          includePreview: true

      - name: Install .NET Tool - Report Generator
        uses: codebeltnet/dotnet-tool-install-reportgenerator@v1
      
      - name: install .NET Tool - trace
        run: dotnet tool install --global dotnet-trace
      
      - name: Make dir
        run: mkdir ${{ runner.temp }}/logs/diag1.log
       
      - name: Test with ${{ matrix.configuration }} build 1
        if: ${{ !(runner.os == 'Windows' && contains(matrix.project, 'Cuemon.Data.SqlClient.Tests')) }}
        run: dotnet trace collect --output ${{ runner.temp }}/logs/trace1.nettrace -- dotnet test test/Cuemon.AspNetCore.Mvc.FunctionalTests/Cuemon.AspNetCore.Mvc.FunctionalTests.csproj --diag:${{ runner.temp }}/logs/diag1.log
      
      - name: Test with ${{ matrix.configuration }} build 2
        if: ${{ !(runner.os == 'Windows' && contains(matrix.project, 'Cuemon.Data.SqlClient.Tests')) }}
        run: dotnet trace collect --output ${{ runner.temp }}/logs/trace2.nettrace -- dotnet test test/Cuemon.AspNetCore.Mvc.Tests/Cuemon.AspNetCore.Mvc.Tests.csproj --diag:${{ runner.temp }}/logs/diag2.log

      # - name: Test with ${{ matrix.configuration }} build
      #   if: ${{ !(runner.os == 'Windows' && contains(matrix.project, 'Cuemon.Data.SqlClient.Tests')) }}
      #   uses: codebeltnet/dotnet-test@v3.1.0
      #   with:
      #     projects: "test/**/Cuemon.AspNetCore.Mvc.FunctionalTests.csproj test/**/Cuemon.AspNetCore.Mvc.Tests.csproj"
      #     configuration: ${{ matrix.configuration }}
      #     restoreCacheKey: ${{ runner.os == 'Linux' && needs.prepare_linux.outputs.restoreCacheKey || needs.prepare_windows.outputs.restoreCacheKey }}
      #     level: detailed
      #     buildSwitches: --diag:${{ runner.temp }}/logs/diag.log

      - name: Upload ${{ matrix.configuration }} logs
        if: ${{ always() }}
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.configuration }}-logs
          path: ${{ runner.temp }}/logs/

